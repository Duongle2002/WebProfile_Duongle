@{
    ViewData["Title"] = "Lê Hữu Dương - Full Stack Developer";
    
    // Lấy dữ liệu từ ViewBag
    var projects = ViewBag.Projects as List<MyWebProfile.Models.Project> ?? new List<MyWebProfile.Models.Project>();
    var skills = ViewBag.Skills as List<MyWebProfile.Models.Skill> ?? new List<MyWebProfile.Models.Skill>();
    var experiences = ViewBag.Experiences as List<MyWebProfile.Models.Experience> ?? new List<MyWebProfile.Models.Experience>();
    var contentSettings = ViewBag.ContentSettings as List<MyWebProfile.Models.ContentSettings> ?? new List<MyWebProfile.Models.ContentSettings>();
    var displayConfig = ViewBag.DisplayConfig as Dictionary<string, object> ?? new Dictionary<string, object>();
    
    // Lấy thông tin từ ContentSettings
    var aboutName = contentSettings.FirstOrDefault(x => x.Key == "AboutName")?.Value ?? "Lê Hữu Dương";
    var aboutTitle = contentSettings.FirstOrDefault(x => x.Key == "AboutTitle")?.Value ?? "Full Stack Developer với hơn 5 năm kinh nghiệm";
    var aboutDescription = contentSettings.FirstOrDefault(x => x.Key == "AboutDescription")?.Value ?? "Tôi là một developer đam mê với kinh nghiệm trong việc phát triển các ứng dụng web hiện đại. Chuyên môn của tôi bao gồm React, .NET, và các công nghệ frontend/backend tiên tiến.";
                    // Tính toán động từ database
                var aboutExperience = experiences.Count > 0 ? experiences.Count.ToString() + "+" : "5+";
                var aboutProjects = projects.Count.ToString();
                var aboutClients = contentSettings.FirstOrDefault(x => x.Key == "SatisfiedClients")?.Value ?? "50+";
    
    var contactEmail = contentSettings.FirstOrDefault(x => x.Key == "ContactEmail")?.Value ?? "duongle@email.com";
    var contactPhone = contentSettings.FirstOrDefault(x => x.Key == "ContactPhone")?.Value ?? "+84 123 456 789";
    var contactAddress = contentSettings.FirstOrDefault(x => x.Key == "ContactAddress")?.Value ?? "Hà Nội, Việt Nam";
    var contactGithub = contentSettings.FirstOrDefault(x => x.Key == "ContactGithub")?.Value ?? "#";
    var contactLinkedin = contentSettings.FirstOrDefault(x => x.Key == "ContactLinkedin")?.Value ?? "#";
    var contactTwitter = contentSettings.FirstOrDefault(x => x.Key == "ContactTwitter")?.Value ?? "#";
    
    // Display settings
    var aboutActive = displayConfig.ContainsKey("AboutActive") ? (bool)displayConfig["AboutActive"] : true;
    var experienceActive = displayConfig.ContainsKey("ExperienceActive") ? (bool)displayConfig["ExperienceActive"] : true;
    var projectsActive = displayConfig.ContainsKey("ProjectsActive") ? (bool)displayConfig["ProjectsActive"] : true;
    var contactActive = displayConfig.ContainsKey("ContactActive") ? (bool)displayConfig["ContactActive"] : true;
    
    var floatingNavActive = displayConfig.ContainsKey("FloatingNavActive") ? (bool)displayConfig["FloatingNavActive"] : true;
    var backToTopActive = displayConfig.ContainsKey("BackToTopActive") ? (bool)displayConfig["BackToTopActive"] : true;
    var pageLoaderActive = displayConfig.ContainsKey("PageLoaderActive") ? (bool)displayConfig["PageLoaderActive"] : true;
    var scrollAnimationActive = displayConfig.ContainsKey("ScrollAnimationActive") ? (bool)displayConfig["ScrollAnimationActive"] : true;
}

<!-- Hero Section -->
<partial name="_Hero" />

<!-- Navigation Menu -->
@if (floatingNavActive)
{
    <nav class="floating-nav" id="floatingNav">
        <div class="nav-container">
            <div class="nav-links">
                <a href="#hero" class="nav-link active" data-section="hero">
                    <i class="fas fa-home"></i>
                    <span>Trang chủ</span>
                </a>
                @if (aboutActive)
                {
                    <a href="#about" class="nav-link" data-section="about">
                        <i class="fas fa-user"></i>
                        <span>Giới thiệu</span>
                    </a>
                }
                @if (experienceActive)
                {
                    <a href="#experience" class="nav-link" data-section="experience">
                        <i class="fas fa-briefcase"></i>
                        <span>Kinh nghiệm</span>
                    </a>
                }
                @if (projectsActive)
                {
                    <a href="#projects" class="nav-link" data-section="projects">
                        <i class="fas fa-project-diagram"></i>
                        <span>Dự án</span>
                    </a>
                }
                @if (contactActive)
                {
                    <a href="#contact" class="nav-link" data-section="contact">
                        <i class="fas fa-envelope"></i>
                        <span>Liên hệ</span>
                    </a>
                }
            </div>
        </div>
    </nav>
}

<!-- Main Content Sections -->
<main class="main-content">
    @{
        var sections = ViewBag.Sections as List<object> ?? new List<object>();
    }
    
    @foreach (dynamic section in sections)
    {
        @if (section.Active)
        {
            switch (section.Type)
            {
                case "About":
                    <section id="about" class="section about-section">
                        <div class="container">
                            <div class="section-header">
                                <h2 class="section-title">Về Tôi</h2>
                                <p class="section-subtitle">Tìm hiểu thêm về tôi và những gì tôi làm</p>
                            </div>
                            <div class="about-content">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="about-text">
                                            <h3>@aboutName</h3>
                                            <p class="lead">@aboutTitle</p>
                                            <p>@aboutDescription</p>
                                            <div class="skills-grid">
                                                @foreach (var skill in skills.Take(4))
                                                {
                                                    <div class="skill-item">
                                                        <i class="fas fa-code"></i>
                                                        <span>@skill.Name</span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="about-stats">
                                            <div class="stat-card">
                                                <div class="stat-number">@aboutExperience</div>
                                                <div class="stat-label">Năm kinh nghiệm</div>
                                            </div>
                                            <div class="stat-card">
                                                <div class="stat-number">@aboutProjects</div>
                                                <div class="stat-label">Dự án hoàn thành</div>
                                            </div>
                                            <div class="stat-card">
                                                <div class="stat-number">@aboutClients</div>
                                                <div class="stat-label">Khách hàng hài lòng</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    break;

                case "Experience":
                    <section id="experience" class="section experience-section">
                        <div class="container">
                            <div class="section-header">
                                <h2 class="section-title">Kinh Nghiệm</h2>
                                <p class="section-subtitle">Hành trình phát triển sự nghiệp của tôi</p>
                            </div>
                            <div class="experience-timeline">
                                @foreach (var experience in experiences)
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-dot"></div>
                                        <div class="timeline-content">
                                            <h3>@experience.Title</h3>
                                            <p class="timeline-company">@experience.Company - @experience.StartDate.ToString("yyyy") - @(experience.EndDate?.ToString("yyyy") ?? "Hiện tại")</p>
                                            <p>@experience.Description</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </section>
                    break;

                case "Projects":
                    <section id="projects" class="section projects-section">
                        <div class="container">
                            <div class="section-header">
                                <h2 class="section-title">Dự Án</h2>
                                <p class="section-subtitle">Những dự án tôi đã thực hiện</p>
                            </div>
                            <div class="projects-grid">
                                @foreach (var project in projects)
                                {
                                    <div class="project-card">
                                        <div class="project-image">
                                            <img src="@(string.IsNullOrEmpty(project.ImageUrl) ? "/images/default-project.svg" : project.ImageUrl)" alt="@project.Title" onerror="this.src='/images/default-project.svg'">
                                        </div>
                                        <div class="project-content">
                                            <h3 class="project-title">@project.Title</h3>
                                            <p class="project-description">@project.Description</p>
                                            <div class="project-tags">
                                                @if (!string.IsNullOrEmpty(project.Tags))
                                                {
                                                    var tags = project.Tags.Split(',');
                                                    foreach (var tag in tags)
                                                    {
                                                        <span class="badge bg-primary me-1">@tag.Trim()</span>
                                                    }
                                                }
                                            </div>
                                            <div class="project-meta">
                                                <span class="price">$@project.Price.ToString("N0")</span>
                                                <div class="rating">
                                                    <i class="fas fa-star"></i>
                                                    <span>@project.Rating.ToString("F1")</span>
                                                </div>
                                            </div>
                                            <div class="project-actions">
                                                @if (!string.IsNullOrEmpty(project.GitHubUrl))
                                                {
                                                    <a href="@project.GitHubUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                                        <i class="fab fa-github"></i> GitHub
                                                    </a>
                                                }
                                                @if (!string.IsNullOrEmpty(project.DeployUrl))
                                                {
                                                    <a href="@project.DeployUrl" target="_blank" class="btn btn-sm btn-success">
                                                        <i class="fas fa-external-link-alt"></i> Live Demo
                                                    </a>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </section>
                    break;

                case "Contact":
                    <section id="contact" class="section contact-section">
                        <div class="container">
                            <div class="section-header">
                                <h2 class="section-title">Liên Hệ</h2>
                                <p class="section-subtitle">Hãy liên hệ với tôi để bắt đầu dự án của bạn</p>
                            </div>
                            <div class="contact-content">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="contact-info">
                                            <h3>Thông tin liên hệ</h3>
                                            <div class="contact-item">
                                                <i class="fas fa-envelope"></i>
                                                <span>@contactEmail</span>
                                            </div>
                                            <div class="contact-item">
                                                <i class="fas fa-phone"></i>
                                                <span>@contactPhone</span>
                                            </div>
                                            <div class="contact-item">
                                                <i class="fas fa-map-marker-alt"></i>
                                                <span>@contactAddress</span>
                                            </div>
                                            <div class="social-links">
                                                <a href="@contactGithub" class="social-link" target="_blank"><i class="fab fa-github"></i></a>
                                                <a href="@contactLinkedin" class="social-link" target="_blank"><i class="fab fa-linkedin"></i></a>
                                                <a href="@contactTwitter" class="social-link" target="_blank"><i class="fab fa-twitter"></i></a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="contact-form">
                                            <form>
                                                <div class="form-group">
                                                    <input type="text" placeholder="Họ và tên" required>
                                                </div>
                                                <div class="form-group">
                                                    <input type="email" placeholder="Email" required>
                                                </div>
                                                <div class="form-group">
                                                    <textarea placeholder="Nội dung tin nhắn" rows="5" required></textarea>
                                                </div>
                                                <button type="submit" class="btn btn-primary">Gửi tin nhắn</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    break;
            }
        }
    }
</main>

<!-- Back to Top Button -->
@if (backToTopActive)
{
    <button class="back-to-top" id="backToTop">
        <i class="fas fa-arrow-up"></i>
    </button>
}

<!-- Loading Animation -->
@if (pageLoaderActive)
{
    <div class="page-loader" id="pageLoader">
        <div class="loader-content">
            <div class="loader-spinner"></div>
            <p>Đang tải...</p>
        </div>
    </div>
}

<style>
/* Global Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
    overflow-x: hidden;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    color: #333;
    overflow-x: hidden;
    /* Tối ưu scroll performance */
    -webkit-overflow-scrolling: touch;
    scroll-behavior: smooth;
}

.container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
}

/* Section Styles */
.section {
    padding: 6rem 0;
    position: relative;
}

.section-header {
    text-align: center;
    margin-bottom: 4rem;
}

.section-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.section-subtitle {
    font-size: 1.2rem;
    color: #666;
    max-width: 600px;
    margin: 0 auto;
}

/* About Section */
.about-content {
    margin-top: 3rem;
}

.about-text h3 {
    font-size: 2rem;
    margin-bottom: 1rem;
    color: #333;
}

.about-text .lead {
    font-size: 1.2rem;
    color: #666;
    margin-bottom: 1.5rem;
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1rem;
    margin-top: 2rem;
}

.skill-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
    background: rgba(102, 126, 234, 0.1);
    border-radius: 10px;
    transition: all 0.3s ease;
}

.skill-item:hover {
    background: rgba(102, 126, 234, 0.2);
    transform: translateY(-2px);
}

.skill-item i {
    color: #667eea;
    font-size: 1.2rem;
}

.about-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 1.5rem;
}

.stat-card {
    text-align: center;
    padding: 2rem;
    background: white;
    border-radius: 15px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-5px);
}

.stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    color: #667eea;
    margin-bottom: 0.5rem;
}

.stat-label {
    color: #666;
    font-size: 0.9rem;
}

/* Experience Section */
.experience-timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
}

.experience-timeline::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 0;
    bottom: 0;
    width: 2px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    transform: translateX(-50%);
}

.timeline-item {
    position: relative;
    margin-bottom: 3rem;
    width: 45%;
}

.timeline-item:nth-child(odd) {
    left: 0;
}

.timeline-item:nth-child(even) {
    left: 55%;
}

.timeline-dot {
    position: absolute;
    width: 20px;
    height: 20px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 50%;
    top: 0;
}

.timeline-item:nth-child(odd) .timeline-dot {
    right: -60px;
}

.timeline-item:nth-child(even) .timeline-dot {
    left: -60px;
}

.timeline-content {
    background: white;
    padding: 2rem;
    border-radius: 15px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
}

.timeline-content h3 {
    color: #333;
    margin-bottom: 0.5rem;
}

.timeline-company {
    color: #667eea;
    font-weight: 600;
    margin-bottom: 1rem;
}

/* Projects Section */
.projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
}

.project-card {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: 1px solid #e0e0e0;
}

.project-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
}

.project-image {
    height: 200px;
    overflow: hidden;
    background: #f8f9fa;
    display: flex;
    align-items: center;
    justify-content: center;
}

.project-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.project-content {
    padding: 1.5rem;
}

.project-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: #2c3e50;
}

.project-description {
    color: #6c757d;
    font-size: 0.9rem;
    line-height: 1.5;
    margin-bottom: 1rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.project-tags {
    margin-bottom: 1rem;
}

.project-tags .badge {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
}

.project-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding: 0.75rem 0;
    border-top: 1px solid #e9ecef;
    border-bottom: 1px solid #e9ecef;
}

.price {
    font-weight: 600;
    color: #28a745;
    font-size: 1.1rem;
}

.rating {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: #ffc107;
}

.rating i {
    font-size: 0.9rem;
}

.project-actions {
    display: flex;
    gap: 0.5rem;
}

.project-actions .btn {
    font-size: 0.8rem;
    padding: 0.375rem 0.75rem;
}

/* Contact Section */
.contact-content {
    margin-top: 3rem;
}

.contact-info h3 {
    color: white;
    margin-bottom: 2rem;
}

.contact-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
    color: rgba(255, 255, 255, 0.9);
}

.contact-item i {
    width: 20px;
    color: rgba(255, 255, 255, 0.7);
}

.social-links {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
}

.social-link {
    width: 45px;
    height: 45px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-decoration: none;
    transition: all 0.3s ease;
}

.social-link:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-3px);
    color: white;
}

.contact-form {
    background: rgba(255, 255, 255, 0.1);
    padding: 2rem;
    border-radius: 15px;
    backdrop-filter: blur(10px);
}

.form-group {
    margin-bottom: 1.5rem;
}

.form-group input,
.form-group textarea {
    width: 100%;
    padding: 1rem;
    border: none;
    border-radius: 10px;
    background: rgba(255, 255, 255, 0.9);
    color: #333;
    font-size: 1rem;
}

.form-group input::placeholder,
.form-group textarea::placeholder {
    color: #666;
}

.btn-primary {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    border: none;
    color: white;
    padding: 1rem 2rem;
    border-radius: 50px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
}

/* Floating Navigation */
.floating-nav {
    position: fixed;
    top: 50%;
    right: 2rem;
    transform: translateY(-50%);
    z-index: 1000;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-radius: 50px;
    padding: 1rem;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
}

.nav-container {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.nav-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.25rem;
    padding: 0.75rem;
    border-radius: 25px;
    color: #666;
    text-decoration: none;
    transition: all 0.3s ease;
    font-size: 0.8rem;
    min-width: 60px;
}

.nav-link:hover {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    transform: translateX(-5px);
}

.nav-link.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

.nav-link i {
    font-size: 1.2rem;
}

/* Back to Top Button */
.back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: none;
    border-radius: 50%;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
}

.back-to-top.show {
    opacity: 1;
    visibility: visible;
}

.back-to-top:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
}

/* Page Loader */
.page-loader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 9999;
    transition: opacity 0.5s ease, visibility 0.5s ease;
}

.page-loader.hidden {
    opacity: 0;
    visibility: hidden;
}

.loader-content {
    text-align: center;
    color: white;
}

.loader-spinner {
    width: 50px;
    height: 50px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-top: 3px solid white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Section Backgrounds */
.about-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.experience-section {
    background: white;
}

.projects-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
}

.contact-section {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

.contact-section .section-title {
    background: linear-gradient(45deg, #fff, #f0f0f0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.contact-section .section-subtitle {
    color: rgba(255, 255, 255, 0.8);
}

/* Responsive Design */
@@media (max-width: 768px) {
    html {
        scroll-behavior: auto;
    }
    
    body {
        -webkit-overflow-scrolling: touch;
    }
    
    .floating-nav {
        position: fixed;
        bottom: 2rem;
        right: 2rem;
        top: auto;
        transform: none;
        flex-direction: row;
        border-radius: 25px;
    }
    
    .nav-container {
        flex-direction: row;
        gap: 0.25rem;
    }
    
    .nav-link {
        flex-direction: column;
        padding: 0.5rem;
        min-width: 50px;
    }
    
    .nav-link span {
        display: none;
    }
    
    .section {
        padding: 4rem 0;
    }
    
    .section-title {
        font-size: 2.5rem;
    }
    
    .container {
        padding: 0 1rem;
    }
    
    .timeline-item {
        width: 100%;
        left: 0 !important;
    }
    
    .experience-timeline::before {
        left: 20px;
    }
    
    .timeline-dot {
        left: -40px !important;
        right: auto !important;
    }
}

@@media (max-width: 480px) {
    .floating-nav {
        right: 1rem;
        bottom: 1rem;
    }
    
    .section-title {
        font-size: 2rem;
    }
    
    .back-to-top {
        right: 1rem;
        bottom: 1rem;
    }
}

/* Scroll Animations */
.fade-in {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease;
}

.fade-in.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Smooth transitions */
.section {
    transition: all 0.3s ease;
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Page Loader
    const pageLoader = document.getElementById('pageLoader');
    if (pageLoader) {
        setTimeout(() => {
            pageLoader.classList.add('hidden');
        }, 1000);
    }

    // Back to Top Button
    const backToTop = document.getElementById('backToTop');
    if (backToTop) {
        window.addEventListener('scroll', () => {
            if (window.pageYOffset > 300) {
                backToTop.classList.add('show');
            } else {
                backToTop.classList.remove('show');
            }
        });

        backToTop.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    }

    // Floating Navigation
    const navLinks = document.querySelectorAll('.nav-link');
    const sections = document.querySelectorAll('.section');

    // Smooth scrolling for navigation links
    navLinks.forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = link.getAttribute('href').substring(1);
            const targetSection = document.getElementById(targetId);
            
            if (targetSection) {
                targetSection.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    });

    // Active navigation link based on scroll position
    window.addEventListener('scroll', () => {
        let current = '';
        const scrollPosition = window.pageYOffset + 200;

        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.clientHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                current = section.getAttribute('id');
            }
        });

        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${current}`) {
                link.classList.add('active');
            }
        });
    });

    // Scroll animations
    @if (scrollAnimationActive)
    {
        <text>
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, observerOptions);

        // Observe all sections for fade-in animation
        sections.forEach(section => {
            section.classList.add('fade-in');
            observer.observe(section);
        });
        </text>
    }

    // Tối ưu scroll performance - sử dụng requestAnimationFrame
    let ticking = false;
    
    function updateParallax() {
        const scrolled = window.pageYOffset;
        const parallaxElements = document.querySelectorAll('.section');
        
        parallaxElements.forEach(element => {
            const speed = 0.3; // Giảm tốc độ để mượt hơn
            element.style.transform = `translateY(${scrolled * speed}px)`;
        });
        
        ticking = false;
    }
    
    window.addEventListener('scroll', () => {
        if (!ticking) {
            requestAnimationFrame(updateParallax);
            ticking = true;
        }
    });
});
</script>