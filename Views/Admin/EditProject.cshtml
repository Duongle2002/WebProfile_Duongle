@model MyWebProfile.Models.Project
@{
    ViewData["Title"] = "Sửa dự án";
    Layout = "_AdminLayout";
}
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>Sửa dự án: @Model.Title</h2>
        <p>Cập nhật thông tin dự án</p>
    </div>
    <a href="@Url.Action("Projects", "Admin")" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Quay lại
    </a>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <form asp-action="EditProject" method="post">
                    <input type="hidden" asp-for="Id" />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Title" class="form-label">Tên dự án *</label>
                                <input asp-for="Title" class="form-control" placeholder="Nhập tên dự án">
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Price" class="form-label">Giá dự án *</label>
                                <input asp-for="Price" type="number" class="form-control" placeholder="0">
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description" class="form-label">Mô tả dự án *</label>
                        <textarea asp-for="Description" class="form-control" rows="4" placeholder="Mô tả chi tiết về dự án"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ImageUrl" class="form-label">URL hình ảnh</label>
                        <div class="input-group">
                            <input asp-for="ImageUrl" class="form-control" placeholder="https://example.com/image.jpg" id="imageUrlInput">
                            <button type="button" class="btn btn-outline-secondary" onclick="openImageUpload()">
                                <i class="fas fa-upload"></i>
                            </button>
                        </div>
                        <small class="form-text text-muted">Nhập URL hoặc click nút upload để tải hình ảnh lên</small>
                    </div>

                    <div class="form-group">
                        <label asp-for="GitHubUrl" class="form-label">GitHub URL</label>
                        <input asp-for="GitHubUrl" class="form-control" placeholder="https://github.com/username/repo">
                    </div>

                    <div class="form-group">
                        <label asp-for="DeployUrl" class="form-label">Deploy URL (Tùy chọn)</label>
                        <input asp-for="DeployUrl" class="form-control" placeholder="https://your-app.vercel.app">
                        <small class="form-text text-muted">Link deploy (Vercel, Netlify, Heroku, etc.) - Không bắt buộc</small>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Tags" class="form-label">Tags (phân cách bằng dấu phẩy)</label>
                                <input asp-for="Tags" class="form-control" placeholder="React, .NET, SQL Server">
                                <small class="form-text text-muted">Ví dụ: React, .NET, SQL Server</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="Rating" class="form-label">Đánh giá *</label>
                                <input asp-for="Rating" type="number" step="0.1" min="0" max="5" class="form-control" placeholder="5.0">
                                <span asp-validation-for="Rating" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Cập nhật dự án
                        </button>
                        <a href="@Url.Action("Projects", "Admin")" class="btn btn-outline-secondary">
                            <i class="fas fa-times"></i> Hủy
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h4 class="mb-3">Xem trước Card Dự án</h4>
                <div class="project-preview-container">
                    <div class="project-card-preview" id="projectCardPreview">
                        <div class="project-image">
                            <img id="previewImage" src="@Model.ImageUrl" alt="Project Image" class="img-fluid" onerror="this.src='/images/default-project.svg'">
                        </div>
                        <div class="project-content">
                            <h5 id="previewTitle" class="project-title">@Model.Title</h5>
                            <p id="previewDescription" class="project-description">@Model.Description</p>
                            <div class="project-tags" id="previewTags">
                                @foreach (var tag in Model.Tags?.Split(',') ?? new string[0])
                                {
                                    <span class="badge bg-primary me-1">@tag.Trim()</span>
                                }
                            </div>
                            <div class="project-meta">
                                <span class="price" id="previewPrice">$@Model.Price.ToString("N0")</span>
                                <div class="rating" id="previewRating">
                                    <i class="fas fa-star"></i>
                                    <span>@Model.Rating.ToString("F1")</span>
                                </div>
                            </div>
                            <div class="project-actions">
                                @if (!string.IsNullOrEmpty(Model.GitHubUrl))
                                {
                                    <a href="@Model.GitHubUrl" class="btn btn-sm btn-outline-primary" id="previewGitHub" target="_blank">
                                        <i class="fab fa-github"></i> GitHub
                                    </a>
                                }
                                @if (!string.IsNullOrEmpty(Model.DeployUrl))
                                {
                                    <a href="@Model.DeployUrl" class="btn btn-sm btn-success" id="previewDeploy" target="_blank">
                                        <i class="fas fa-external-link-alt"></i> Live Demo
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                
                <style>
                .project-preview-container {
                    max-height: 500px;
                    overflow-y: auto;
                }
                
                .project-card-preview {
                    border: 1px solid #e0e0e0;
                    border-radius: 12px;
                    overflow: hidden;
                    background: white;
                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                    transition: transform 0.2s ease, box-shadow 0.2s ease;
                }
                
                .project-card-preview:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.15);
                }
                
                .project-image {
                    height: 200px;
                    overflow: hidden;
                    background: #f8f9fa;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                }
                
                .project-image img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                }
                
                .project-content {
                    padding: 1.5rem;
                }
                
                .project-title {
                    font-size: 1.25rem;
                    font-weight: 600;
                    margin-bottom: 0.75rem;
                    color: #2c3e50;
                }
                
                .project-description {
                    color: #6c757d;
                    font-size: 0.9rem;
                    line-height: 1.5;
                    margin-bottom: 1rem;
                    display: -webkit-box;
                    -webkit-line-clamp: 3;
                    -webkit-box-orient: vertical;
                    overflow: hidden;
                }
                
                .project-tags {
                    margin-bottom: 1rem;
                }
                
                .project-tags .badge {
                    font-size: 0.75rem;
                    padding: 0.25rem 0.5rem;
                }
                
                .project-meta {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 1rem;
                    padding: 0.75rem 0;
                    border-top: 1px solid #e9ecef;
                    border-bottom: 1px solid #e9ecef;
                }
                
                .price {
                    font-weight: 600;
                    color: #28a745;
                    font-size: 1.1rem;
                }
                
                .rating {
                    display: flex;
                    align-items: center;
                    gap: 0.25rem;
                    color: #ffc107;
                }
                
                .rating i {
                    font-size: 0.9rem;
                }
                
                .project-actions {
                    display: flex;
                    gap: 0.5rem;
                }
                
                .project-actions .btn {
                    font-size: 0.8rem;
                    padding: 0.375rem 0.75rem;
                }
                </style>
            </div>
        </div>
    </div>
</div>

<!-- CSS và JavaScript đã được chuyển sang file admin.css chung -->

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Get form elements
    const titleInput = document.getElementById('Title');
    const descriptionInput = document.getElementById('Description');
    const imageUrlInput = document.getElementById('ImageUrl');
    const githubUrlInput = document.getElementById('GitHubUrl');
    const deployUrlInput = document.getElementById('DeployUrl');
    const tagsInput = document.getElementById('Tags');
    const priceInput = document.getElementById('Price');
    const ratingInput = document.getElementById('Rating');
    
    // Get preview elements
    const previewTitle = document.getElementById('previewTitle');
    const previewDescription = document.getElementById('previewDescription');
    const previewImage = document.getElementById('previewImage');
    const previewGitHub = document.getElementById('previewGitHub');
    const previewDeploy = document.getElementById('previewDeploy');
    const previewTags = document.getElementById('previewTags');
    const previewPrice = document.getElementById('previewPrice');
    const previewRating = document.getElementById('previewRating');
    
    // Update preview when form inputs change
    function updatePreview() {
        // Update title
        previewTitle.textContent = titleInput.value || 'Tên dự án';
        
        // Update description
        previewDescription.textContent = descriptionInput.value || 'Mô tả dự án sẽ hiển thị ở đây...';
        
        // Update image
        if (imageUrlInput.value) {
            previewImage.src = imageUrlInput.value;
            previewImage.style.display = 'block';
        } else {
            previewImage.src = '/images/default-project.svg';
        }
        
        // Update GitHub link
        if (githubUrlInput && githubUrlInput.value) {
            if (previewGitHub) {
                previewGitHub.href = githubUrlInput.value;
                previewGitHub.style.display = 'inline-block';
            } else {
                // Create GitHub link if it doesn't exist
                const actionsDiv = document.querySelector('.project-actions');
                if (actionsDiv) {
                    actionsDiv.innerHTML = `
                        <a href="${githubUrlInput.value}" class="btn btn-sm btn-outline-primary" id="previewGitHub" target="_blank">
                            <i class="fab fa-github"></i> GitHub
                        </a>
                    `;
                }
            }
        } else if (previewGitHub) {
            previewGitHub.style.display = 'none';
        }
        
        // Update Deploy link
        if (deployUrlInput && deployUrlInput.value) {
            if (previewDeploy) {
                previewDeploy.href = deployUrlInput.value;
                previewDeploy.style.display = 'inline-block';
            } else {
                // Create Deploy link if it doesn't exist
                const actionsDiv = document.querySelector('.project-actions');
                if (actionsDiv) {
                    actionsDiv.innerHTML += `
                        <a href="${deployUrlInput.value}" class="btn btn-sm btn-success" id="previewDeploy" target="_blank">
                            <i class="fas fa-external-link-alt"></i> Live Demo
                        </a>
                    `;
                }
            }
        } else if (previewDeploy) {
            previewDeploy.style.display = 'none';
        }
        
                 // Update tags
         if (previewTags) {
             if (tagsInput.value) {
                 const tags = tagsInput.value.split(',').map(tag => tag.trim());
                 previewTags.innerHTML = tags.map(tag => 
                     `<span class="badge bg-primary me-1">${tag}</span>`
                 ).join('');
             } else {
                 previewTags.innerHTML = '<span class="badge bg-primary me-1">Tags</span>';
             }
         }
        
        // Update price
        if (priceInput.value) {
            previewPrice.textContent = `$${parseFloat(priceInput.value).toLocaleString()}`;
        } else {
            previewPrice.textContent = '$0';
        }
        
        // Update rating
        if (ratingInput.value) {
            const rating = parseFloat(ratingInput.value);
            previewRating.innerHTML = `
                <i class="fas fa-star"></i>
                <span>${rating.toFixed(1)}</span>
            `;
        } else {
            previewRating.innerHTML = `
                <i class="fas fa-star"></i>
                <span>0.0</span>
            `;
        }
    }
    
    // Add event listeners to form inputs
    titleInput.addEventListener('input', updatePreview);
    descriptionInput.addEventListener('input', updatePreview);
    imageUrlInput.addEventListener('input', updatePreview);
    if (githubUrlInput) {
        githubUrlInput.addEventListener('input', updatePreview);
    }
    if (deployUrlInput) {
        deployUrlInput.addEventListener('input', updatePreview);
    }
    tagsInput.addEventListener('input', updatePreview);
    priceInput.addEventListener('input', updatePreview);
    ratingInput.addEventListener('input', updatePreview);
    
    // Initial preview update
    updatePreview();
    
    // Image Upload Modal
    function openImageUpload() {
        // Create modal if it doesn't exist
        if (!document.getElementById('imageUploadModal')) {
            createImageUploadModal();
        }
        
        // Show modal
        const modal = new bootstrap.Modal(document.getElementById('imageUploadModal'));
        modal.show();
    }
    
    function createImageUploadModal() {
        const modalHtml = `
            <div class="modal fade" id="imageUploadModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Upload hình ảnh cho dự án</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0">Tải lên hình ảnh mới</h6>
                                        </div>
                                        <div class="card-body">
                                            <form id="uploadForm" enctype="multipart/form-data">
                                                <div class="mb-3">
                                                    <label for="imageFile" class="form-label">Chọn hình ảnh</label>
                                                    <input type="file" class="form-control" id="imageFile" name="file" accept="image/*" required>
                                                    <small class="text-muted">Hỗ trợ: JPG, PNG, GIF, WEBP (tối đa 5MB)</small>
                                                </div>
                                                
                                                <div class="mb-3">
                                                    <label for="imageCategory" class="form-label">Danh mục</label>
                                                    <select class="form-control" id="imageCategory" name="category">
                                                        <option value="projects">Dự án</option>
                                                        <option value="general">Chung</option>
                                                    </select>
                                                </div>
                                                
                                                <button type="submit" class="btn btn-primary w-100" id="uploadBtn">
                                                    <i class="fas fa-upload"></i> Tải lên
                                                </button>
                                            </form>
                                            
                                            <div id="uploadProgress" class="mt-3" style="display: none;">
                                                <div class="progress">
                                                    <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                                                </div>
                                                <small class="text-muted">Đang tải lên...</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-6">
                                    <div class="card">
                                        <div class="card-header">
                                            <h6 class="mb-0">Hình ảnh đã upload</h6>
                                        </div>
                                        <div class="card-body">
                                            <div id="imageGallery" class="row">
                                                <!-- Images will be loaded here -->
                                            </div>
                                            
                                            <div id="loadingImages" class="text-center py-4">
                                                <div class="spinner-border text-primary" role="status">
                                                    <span class="visually-hidden">Đang tải...</span>
                                                </div>
                                                <p class="mt-2">Đang tải hình ảnh...</p>
                                            </div>
                                            
                                            <div id="noImages" class="text-center py-4" style="display: none;">
                                                <i class="fas fa-images fa-2x text-muted mb-3"></i>
                                                <p class="text-muted">Chưa có hình ảnh nào</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modalHtml);
        
        // Bind upload form
        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            e.preventDefault();
            uploadImage();
        });
        
        // Load images when modal is shown
        document.getElementById('imageUploadModal').addEventListener('shown.bs.modal', function() {
            loadImages();
        });
    }
    
    function uploadImage() {
        const fileInput = document.getElementById('imageFile');
        const category = document.getElementById('imageCategory').value;
        
        if (!fileInput.files[0]) {
            alert('Vui lòng chọn file để tải lên!');
            return;
        }
        
        const formData = new FormData();
        formData.append('file', fileInput.files[0]);
        formData.append('category', category);
        
        // Show progress
        document.getElementById('uploadProgress').style.display = 'block';
        document.getElementById('uploadBtn').disabled = true;
        
        fetch('@Url.Action("UploadImage", "Admin")', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Tải lên thành công!');
                document.getElementById('uploadForm').reset();
                loadImages();
            } else {
                alert('Lỗi: ' + data.message);
            }
        })
        .catch(error => {
            alert('Có lỗi xảy ra khi tải lên!');
        })
        .finally(() => {
            document.getElementById('uploadProgress').style.display = 'none';
            document.getElementById('uploadBtn').disabled = false;
            document.querySelector('.progress-bar').style.width = '0%';
        });
    }
    
    function loadImages() {
        const gallery = document.getElementById('imageGallery');
        const loading = document.getElementById('loadingImages');
        const noImages = document.getElementById('noImages');
        
        loading.style.display = 'block';
        gallery.innerHTML = '';
        noImages.style.display = 'none';
        
        fetch('@Url.Action("GetUploadedImages", "Admin")?category=projects')
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayImages(data.images);
                } else {
                    alert('Lỗi: ' + data.message);
                }
            })
            .catch(error => {
                alert('Có lỗi xảy ra khi tải hình ảnh!');
            })
            .finally(() => {
                loading.style.display = 'none';
            });
    }
    
    function displayImages(images) {
        const gallery = document.getElementById('imageGallery');
        const noImages = document.getElementById('noImages');
        
        gallery.innerHTML = '';
        
        if (images.length === 0) {
            noImages.style.display = 'block';
            return;
        }
        
        images.forEach(function(image) {
            const imageCard = document.createElement('div');
            imageCard.className = 'col-6 mb-2';
            imageCard.innerHTML = `
                <div class="image-card" style="position: relative; border-radius: 8px; overflow: hidden; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                    <img src="${image.url}" alt="${image.name}" style="width: 100%; height: 80px; object-fit: cover;">
                    <div class="image-overlay" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.7); display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity 0.2s ease;">
                        <button class="btn btn-sm btn-light select-image" data-url="${image.url}">
                            <i class="fas fa-check"></i> Chọn
                        </button>
                    </div>
                </div>
            `;
            
            gallery.appendChild(imageCard);
            
            // Add hover effect
            imageCard.querySelector('.image-card').addEventListener('mouseenter', function() {
                this.querySelector('.image-overlay').style.opacity = '1';
            });
            
            imageCard.querySelector('.image-card').addEventListener('mouseleave', function() {
                this.querySelector('.image-overlay').style.opacity = '0';
            });
            
            // Select image
            imageCard.querySelector('.select-image').addEventListener('click', function() {
                const imageUrl = this.getAttribute('data-url');
                document.getElementById('imageUrlInput').value = imageUrl;
                updatePreview();
                
                // Close modal
                const modal = bootstrap.Modal.getInstance(document.getElementById('imageUploadModal'));
                modal.hide();
            });
        });
    }
});
</script> 