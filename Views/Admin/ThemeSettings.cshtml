@model MyWebProfile.Models.ThemeSettings
@{
    ViewData["Title"] = "Cài đặt Giao diện";
    Layout = "_AdminLayout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>Cài đặt Giao diện</h2>
        <p>Tùy chỉnh màu sắc, font chữ và hiệu ứng cho toàn bộ website</p>
    </div>
    <div>
        <a href="@Url.Action("PreviewMainPage", "Admin")" class="btn btn-primary" target="_blank">
            <i class="fas fa-eye"></i> Xem trước Website
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Cài đặt màu sắc</h5>
            </div>
            <div class="card-body">
                <form id="themeForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu chính (Primary)</label>
                                <div class="color-input-group">
                                    <input type="color" id="PrimaryColor" class="color-picker" value="@Model.PrimaryColor">
                                    <input type="text" class="form-control color-text" value="@Model.PrimaryColor" placeholder="#007bff">
                                </div>
                                <small class="text-muted">Màu chủ đạo cho buttons, links, highlights</small>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu phụ (Secondary)</label>
                                <div class="color-input-group">
                                    <input type="color" id="SecondaryColor" class="color-picker" value="@Model.SecondaryColor">
                                    <input type="text" class="form-control color-text" value="@Model.SecondaryColor" placeholder="#6c757d">
                                </div>
                                <small class="text-muted">Màu cho elements phụ, badges, borders</small>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu nền (Background)</label>
                                <div class="color-input-group">
                                    <input type="color" id="BackgroundColor" class="color-picker" value="@Model.BackgroundColor">
                                    <input type="text" class="form-control color-text" value="@Model.BackgroundColor" placeholder="#ffffff">
                                </div>
                                <small class="text-muted">Màu nền chính của website</small>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu chữ (Text)</label>
                                <div class="color-input-group">
                                    <input type="color" id="TextColor" class="color-picker" value="@Model.TextColor">
                                    <input type="text" class="form-control color-text" value="@Model.TextColor" placeholder="#333333">
                                </div>
                                <small class="text-muted">Màu chữ chính</small>
                            </div>
                        </div>
                    </div>

                    <!-- Nút chính (Primary Button) -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <h6 class="mb-3">Nút chính (Primary Button)</h6>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu bắt đầu gradient</label>
                                <div class="color-input-group">
                                    <input type="color" id="PrimaryButtonGradientStart" class="color-picker" value="@(Model.PrimaryButtonGradientStart ?? "#007bff")">
                                    <input type="text" class="form-control color-text" value="@(Model.PrimaryButtonGradientStart ?? "#007bff")" placeholder="#007bff">
                                </div>
                                <small class="text-muted">Màu bắt đầu của gradient</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu kết thúc gradient</label>
                                <div class="color-input-group">
                                    <input type="color" id="PrimaryButtonGradientEnd" class="color-picker" value="@(Model.PrimaryButtonGradientEnd ?? "#0056b3")">
                                    <input type="text" class="form-control color-text" value="@(Model.PrimaryButtonGradientEnd ?? "#0056b3")" placeholder="#0056b3">
                                </div>
                                <small class="text-muted">Màu kết thúc của gradient</small>
                            </div>
                        </div>
                    </div>

                    <!-- Nút phụ (Secondary Button) -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <h6 class="mb-3">Nút phụ (Secondary Button)</h6>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu bắt đầu gradient</label>
                                <div class="color-input-group">
                                    <input type="color" id="SecondaryButtonGradientStart" class="color-picker" value="@(Model.SecondaryButtonGradientStart ?? "#6c757d")">
                                    <input type="text" class="form-control color-text" value="@(Model.SecondaryButtonGradientStart ?? "#6c757d")" placeholder="#6c757d">
                                </div>
                                <small class="text-muted">Màu bắt đầu của gradient</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu kết thúc gradient</label>
                                <div class="color-input-group">
                                    <input type="color" id="SecondaryButtonGradientEnd" class="color-picker" value="@(Model.SecondaryButtonGradientEnd ?? "#545b62")">
                                    <input type="text" class="form-control color-text" value="@(Model.SecondaryButtonGradientEnd ?? "#545b62")" placeholder="#545b62">
                                </div>
                                <small class="text-muted">Màu kết thúc của gradient</small>
                            </div>
                        </div>
                    </div>

                    <!-- Nút outline -->
                    <div class="row mt-4">
                        <div class="col-12">
                            <h6 class="mb-3">Nút outline</h6>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu viền</label>
                                <div class="color-input-group">
                                    <input type="color" id="OutlineButtonBorderColor" class="color-picker" value="@(Model.OutlineButtonBorderColor ?? "#007bff")">
                                    <input type="text" class="form-control color-text" value="@(Model.OutlineButtonBorderColor ?? "#007bff")" placeholder="#007bff">
                                </div>
                                <small class="text-muted">Màu viền của nút outline</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label class="form-label">Màu chữ</label>
                                <div class="color-input-group">
                                    <input type="color" id="OutlineButtonTextColor" class="color-picker" value="@(Model.OutlineButtonTextColor ?? "#007bff")">
                                    <input type="text" class="form-control color-text" value="@(Model.OutlineButtonTextColor ?? "#007bff")" placeholder="#007bff">
                                </div>
                                <small class="text-muted">Màu chữ của nút outline</small>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0">Cài đặt Typography</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Font chữ</label>
                            <select id="FontFamily" class="form-control">
                                <option value="Inter, sans-serif">Inter (Modern)</option>
                                <option value="Roboto, sans-serif">Roboto (Clean)</option>
                                <option value="Open Sans, sans-serif">Open Sans (Readable)</option>
                                <option value="Poppins, sans-serif">Poppins (Modern)</option>
                                <option value="Montserrat, sans-serif">Montserrat (Elegant)</option>
                                <option value="Arial, sans-serif">Arial (Classic)</option>
                                <option value="Times New Roman, serif">Times New Roman (Serif)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Cỡ chữ cơ bản (px)</label>
                            <input type="range" id="FontSize" class="form-range" min="12" max="20" value="@Model.FontSize">
                            <div class="d-flex justify-content-between">
                                <small>12px</small>
                                <small id="fontSizeValue">@Model.FontSize px</small>
                                <small>20px</small>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Chiều cao dòng</label>
                            <select id="LineHeight" class="form-control">
                                <option value="1.2">1.2 (Compact)</option>
                                <option value="1.4">1.4 (Standard)</option>
                                <option value="1.6">1.6 (Comfortable)</option>
                                <option value="1.8">1.8 (Spacious)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Khoảng cách chữ</label>
                            <select id="LetterSpacing" class="form-control">
                                <option value="0px">0px (Normal)</option>
                                <option value="0.5px">0.5px (Slightly spaced)</option>
                                <option value="1px">1px (Spaced)</option>
                                <option value="2px">2px (Wide)</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0">Cài đặt hiệu ứng</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Border Radius</label>
                            <select id="BorderRadius" class="form-control">
                                <option value="0px">0px (Sharp)</option>
                                <option value="4px">4px (Subtle)</option>
                                <option value="8px">8px (Rounded)</option>
                                <option value="12px">12px (Modern)</option>
                                <option value="16px">16px (Very Rounded)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Box Shadow</label>
                            <select id="BoxShadow" class="form-control">
                                <option value="none">None (Flat)</option>
                                <option value="0 2px 4px rgba(0,0,0,0.1)">Subtle</option>
                                <option value="0 4px 8px rgba(0,0,0,0.15)">Medium</option>
                                <option value="0 8px 16px rgba(0,0,0,0.2)">Strong</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Transition Duration</label>
                            <select id="TransitionDuration" class="form-control">
                                <option value="0s">0s (Instant)</option>
                                <option value="0.2s">0.2s (Fast)</option>
                                <option value="0.3s">0.3s (Standard)</option>
                                <option value="0.5s">0.5s (Smooth)</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label class="form-label">Transition Timing</label>
                            <select id="TransitionTimingFunction" class="form-control">
                                <option value="linear">Linear</option>
                                <option value="ease">Ease</option>
                                <option value="ease-in">Ease In</option>
                                <option value="ease-out">Ease Out</option>
                                <option value="ease-in-out">Ease In Out</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-body">
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-primary" onclick="saveThemeSettings()">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="resetToDefault()">
                        <i class="fas fa-undo"></i> Khôi phục mặc định
                    </button>
                    <button type="button" class="btn btn-outline-info" onclick="applyToPreview()">
                        <i class="fas fa-eye"></i> Áp dụng vào Preview
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-4">
        <div class="card sticky-preview">
            <div class="card-header">
                <h5 class="mb-0">Xem trước Real-time</h5>
            </div>
            <div class="card-body">
                <div id="themePreview" class="preview-container">
                    <div class="preview-header">
                        <h3>Tiêu đề mẫu</h3>
                        <p>Đây là đoạn văn bản mẫu để xem trước cách hiển thị với các cài đặt giao diện hiện tại. Bạn có thể thấy font chữ, màu sắc và hiệu ứng được áp dụng ngay lập tức.</p>
                    </div>
                    
                    <div class="preview-buttons">
                        <button class="btn btn-primary">Nút chính</button>
                        <button class="btn btn-secondary">Nút phụ</button>
                        <button class="btn btn-outline-primary">Nút outline</button>
                    </div>
                    
                    <div class="preview-card-sample">
                        <h5>Thẻ mẫu</h5>
                        <p>Nội dung thẻ mẫu để xem trước giao diện với border radius và shadow.</p>
                        <div class="preview-badge">
                            <span class="badge bg-primary">Badge mẫu</span>
                        </div>
                    </div>

                    <div class="preview-form-sample">
                        <h6>Form mẫu</h6>
                        <div class="mb-3">
                            <label class="form-label">Input mẫu</label>
                            <input type="text" class="form-control" placeholder="Nhập text...">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h6 class="mb-0">Presets nhanh</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <button type="button" class="btn btn-sm btn-outline-primary" onclick="applyPreset('modern')">
                        Modern Blue
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-success" onclick="applyPreset('nature')">
                        Nature Green
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-warning" onclick="applyPreset('warm')">
                        Warm Orange
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="applyPreset('elegant')">
                        Elegant Purple
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.color-input-group {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.color-picker {
    width: 50px;
    height: 40px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.color-text {
    flex: 1;
    font-family: monospace;
}

.preview-container {
    padding: 1rem;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.preview-header h3 {
    margin-bottom: 0.5rem;
}

.preview-buttons {
    margin: 1rem 0;
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
}

.preview-card-sample {
    padding: 1rem;
    margin: 1rem 0;
    border: 1px solid #dee2e6;
    border-radius: 8px;
    background: rgba(255,255,255,0.1);
}

.preview-badge {
    margin-top: 0.5rem;
}

.preview-form-sample {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid rgba(0,0,0,0.1);
}

.sticky-preview {
    position: sticky;
    top: 2rem;
}

@@media (max-width: 768px) {
    .sticky-preview {
        position: static;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Color picker synchronization
    const colorPickers = document.querySelectorAll('.color-picker');
    const colorTexts = document.querySelectorAll('.color-text');
    
    colorPickers.forEach((picker, index) => {
        const text = colorTexts[index];
        
        picker.addEventListener('input', function() {
            text.value = this.value;
            updatePreview();
        });
        
        text.addEventListener('input', function() {
            picker.value = this.value;
            updatePreview();
        });
    });

    // Font size range
    const fontSizeRange = document.getElementById('FontSize');
    const fontSizeValue = document.getElementById('fontSizeValue');
    
    fontSizeRange.addEventListener('input', function() {
        fontSizeValue.textContent = this.value + 'px';
        updatePreview();
    });

    // All form controls
    const controls = [
        'PrimaryColor', 'SecondaryColor', 'BackgroundColor', 'TextColor',
        'PrimaryButtonGradientStart', 'PrimaryButtonGradientEnd',
        'SecondaryButtonGradientStart', 'SecondaryButtonGradientEnd',
        'OutlineButtonBorderColor', 'OutlineButtonTextColor',
        'FontFamily', 'FontSize', 'LineHeight', 'LetterSpacing',
        'BorderRadius', 'BoxShadow', 'TransitionDuration', 'TransitionTimingFunction'
    ];

    controls.forEach(controlId => {
        const control = document.getElementById(controlId);
        if (control) {
            control.addEventListener('input', updatePreview);
            control.addEventListener('change', updatePreview);
        }
    });

    function updatePreview() {
        const primary = document.getElementById('PrimaryColor').value;
        const secondary = document.getElementById('SecondaryColor').value;
        const background = document.getElementById('BackgroundColor').value;
        const text = document.getElementById('TextColor').value;
        const font = document.getElementById('FontFamily').value;
        const size = document.getElementById('FontSize').value;
        const lineHeight = document.getElementById('LineHeight').value;
        const letterSpacing = document.getElementById('LetterSpacing').value;
        const borderRadius = document.getElementById('BorderRadius').value;
        const boxShadow = document.getElementById('BoxShadow').value;
        const transitionDuration = document.getElementById('TransitionDuration').value;
        const transitionTiming = document.getElementById('TransitionTimingFunction').value;

        // Button gradient colors
        const primaryGradientStart = document.getElementById('PrimaryButtonGradientStart').value;
        const primaryGradientEnd = document.getElementById('PrimaryButtonGradientEnd').value;
        const secondaryGradientStart = document.getElementById('SecondaryButtonGradientStart').value;
        const secondaryGradientEnd = document.getElementById('SecondaryButtonGradientEnd').value;
        const outlineBorderColor = document.getElementById('OutlineButtonBorderColor').value;
        const outlineTextColor = document.getElementById('OutlineButtonTextColor').value;

        const preview = document.getElementById('themePreview');
        
        // Apply styles to preview
        preview.style.backgroundColor = background;
        preview.style.color = text;
        preview.style.fontFamily = font;
        preview.style.fontSize = size + 'px';
        preview.style.lineHeight = lineHeight;
        preview.style.letterSpacing = letterSpacing;
        preview.style.borderRadius = borderRadius;
        preview.style.boxShadow = boxShadow;
        preview.style.transition = `all ${transitionDuration} ${transitionTiming}`;

        // Update primary buttons with gradient
        const primaryButtons = preview.querySelectorAll('.btn-primary');
        primaryButtons.forEach(btn => {
            btn.style.background = `linear-gradient(135deg, ${primaryGradientStart}, ${primaryGradientEnd})`;
            btn.style.borderColor = primaryGradientEnd;
            btn.style.color = '#ffffff';
        });

        // Update secondary buttons with gradient
        const secondaryButtons = preview.querySelectorAll('.btn-secondary');
        secondaryButtons.forEach(btn => {
            btn.style.background = `linear-gradient(135deg, ${secondaryGradientStart}, ${secondaryGradientEnd})`;
            btn.style.borderColor = secondaryGradientEnd;
            btn.style.color = '#ffffff';
        });

        // Update outline buttons
        const outlineButtons = preview.querySelectorAll('.btn-outline-primary');
        outlineButtons.forEach(btn => {
            btn.style.color = outlineTextColor;
            btn.style.borderColor = outlineBorderColor;
            btn.style.backgroundColor = 'transparent';
        });

        // Update badges
        const badges = preview.querySelectorAll('.badge.bg-primary');
        badges.forEach(badge => {
            badge.style.background = `linear-gradient(135deg, ${primaryGradientStart}, ${primaryGradientEnd}) !important`;
        });

        // Update form controls
        const formControls = preview.querySelectorAll('.form-control');
        formControls.forEach(control => {
            control.style.borderRadius = borderRadius;
            control.style.transition = `all ${transitionDuration} ${transitionTiming}`;
        });
    }

    // Set initial values from Model
    document.getElementById('PrimaryColor').value = '@Model.PrimaryColor';
    document.getElementById('SecondaryColor').value = '@Model.SecondaryColor';
    document.getElementById('BackgroundColor').value = '@Model.BackgroundColor';
    document.getElementById('TextColor').value = '@Model.TextColor';
    document.getElementById('PrimaryButtonGradientStart').value = '@(Model.PrimaryButtonGradientStart ?? "#007bff")';
    document.getElementById('PrimaryButtonGradientEnd').value = '@(Model.PrimaryButtonGradientEnd ?? "#0056b3")';
    document.getElementById('SecondaryButtonGradientStart').value = '@(Model.SecondaryButtonGradientStart ?? "#6c757d")';
    document.getElementById('SecondaryButtonGradientEnd').value = '@(Model.SecondaryButtonGradientEnd ?? "#545b62")';
    document.getElementById('OutlineButtonBorderColor').value = '@(Model.OutlineButtonBorderColor ?? "#007bff")';
    document.getElementById('OutlineButtonTextColor').value = '@(Model.OutlineButtonTextColor ?? "#007bff")';
    document.getElementById('FontFamily').value = '@Model.FontFamily';
    document.getElementById('FontSize').value = '@Model.FontSize';
    document.getElementById('LineHeight').value = '@Model.LineHeight';
    document.getElementById('LetterSpacing').value = '@Model.LetterSpacing';
    document.getElementById('BorderRadius').value = '@Model.BorderRadius';
    document.getElementById('BoxShadow').value = '@Model.BoxShadow';
    document.getElementById('TransitionDuration').value = '@Model.TransitionDuration';
    document.getElementById('TransitionTimingFunction').value = '@Model.TransitionTimingFunction';
    
    // Update color text inputs
    document.querySelectorAll('.color-text').forEach((text, index) => {
        text.value = document.querySelectorAll('.color-picker')[index].value;
    });
    
    // Update font size display
    document.getElementById('fontSizeValue').textContent = '@Model.FontSize px';
    
    // Initial preview
    updatePreview();
});

function saveThemeSettings() {
    const formData = {
        PrimaryColor: document.getElementById('PrimaryColor').value,
        SecondaryColor: document.getElementById('SecondaryColor').value,
        BackgroundColor: document.getElementById('BackgroundColor').value,
        TextColor: document.getElementById('TextColor').value,
        PrimaryButtonGradientStart: document.getElementById('PrimaryButtonGradientStart').value,
        PrimaryButtonGradientEnd: document.getElementById('PrimaryButtonGradientEnd').value,
        SecondaryButtonGradientStart: document.getElementById('SecondaryButtonGradientStart').value,
        SecondaryButtonGradientEnd: document.getElementById('SecondaryButtonGradientEnd').value,
        OutlineButtonBorderColor: document.getElementById('OutlineButtonBorderColor').value,
        OutlineButtonTextColor: document.getElementById('OutlineButtonTextColor').value,
        FontFamily: document.getElementById('FontFamily').value,
        FontSize: document.getElementById('FontSize').value,
        LineHeight: document.getElementById('LineHeight').value,
        LetterSpacing: document.getElementById('LetterSpacing').value,
        BorderRadius: document.getElementById('BorderRadius').value,
        BoxShadow: document.getElementById('BoxShadow').value,
        TransitionDuration: document.getElementById('TransitionDuration').value,
        TransitionTimingFunction: document.getElementById('TransitionTimingFunction').value
    };

    $.ajax({
        url: '@Url.Action("UpdateThemeSettings", "Admin")',
        type: 'POST',
        data: formData,
        success: function(response) {
            if (response.success) {
                alert('Cài đặt giao diện đã được lưu thành công!');
            } else {
                alert('Lỗi: ' + response.message);
            }
        },
        error: function() {
            alert('Có lỗi xảy ra khi lưu cài đặt!');
        }
    });
}

function resetToDefault() {
    document.getElementById('PrimaryColor').value = '#007bff';
    document.getElementById('SecondaryColor').value = '#6c757d';
    document.getElementById('BackgroundColor').value = '#ffffff';
    document.getElementById('TextColor').value = '#333333';
    document.getElementById('PrimaryButtonGradientStart').value = '#007bff';
    document.getElementById('PrimaryButtonGradientEnd').value = '#0056b3';
    document.getElementById('SecondaryButtonGradientStart').value = '#6c757d';
    document.getElementById('SecondaryButtonGradientEnd').value = '#545b62';
    document.getElementById('OutlineButtonBorderColor').value = '#007bff';
    document.getElementById('OutlineButtonTextColor').value = '#007bff';
    document.getElementById('FontFamily').value = "'Inter', sans-serif";
    document.getElementById('FontSize').value = '16';
    document.getElementById('LineHeight').value = '1.6';
    document.getElementById('LetterSpacing').value = '0.5px';
    document.getElementById('BorderRadius').value = '8px';
    document.getElementById('BoxShadow').value = '0 2px 4px rgba(0,0,0,0.1)';
    document.getElementById('TransitionDuration').value = '0.3s';
    document.getElementById('TransitionTimingFunction').value = 'ease';
    
    // Update color text inputs
    document.querySelectorAll('.color-text').forEach((text, index) => {
        text.value = document.querySelectorAll('.color-picker')[index].value;
    });
    
    // Update font size display
    document.getElementById('fontSizeValue').textContent = '16 px';
    
    // Trigger preview update
    document.getElementById('PrimaryColor').dispatchEvent(new Event('input'));
}

function applyPreset(preset) {
    const presets = {
        modern: {
            PrimaryColor: '#3b82f6',
            SecondaryColor: '#64748b',
            BackgroundColor: '#ffffff',
            TextColor: '#1e293b',
            PrimaryButtonGradientStart: '#3b82f6',
            PrimaryButtonGradientEnd: '#1d4ed8',
            SecondaryButtonGradientStart: '#64748b',
            SecondaryButtonGradientEnd: '#475569',
            OutlineButtonBorderColor: '#3b82f6',
            OutlineButtonTextColor: '#3b82f6',
            FontFamily: "'Inter', sans-serif",
            BorderRadius: '12px',
            BoxShadow: '0 4px 8px rgba(0,0,0,0.15)'
        },
        nature: {
            PrimaryColor: '#10b981',
            SecondaryColor: '#6b7280',
            BackgroundColor: '#f9fafb',
            TextColor: '#374151',
            PrimaryButtonGradientStart: '#10b981',
            PrimaryButtonGradientEnd: '#059669',
            SecondaryButtonGradientStart: '#6b7280',
            SecondaryButtonGradientEnd: '#4b5563',
            OutlineButtonBorderColor: '#10b981',
            OutlineButtonTextColor: '#10b981',
            FontFamily: "'Open Sans', sans-serif",
            BorderRadius: '8px',
            BoxShadow: '0 2px 4px rgba(0,0,0,0.1)'
        },
        warm: {
            PrimaryColor: '#f59e0b',
            SecondaryColor: '#8b5cf6',
            BackgroundColor: '#fef3c7',
            TextColor: '#92400e',
            PrimaryButtonGradientStart: '#f59e0b',
            PrimaryButtonGradientEnd: '#d97706',
            SecondaryButtonGradientStart: '#8b5cf6',
            SecondaryButtonGradientEnd: '#7c3aed',
            OutlineButtonBorderColor: '#f59e0b',
            OutlineButtonTextColor: '#f59e0b',
            FontFamily: "'Poppins', sans-serif",
            BorderRadius: '16px',
            BoxShadow: '0 8px 16px rgba(0,0,0,0.2)'
        },
        elegant: {
            PrimaryColor: '#8b5cf6',
            SecondaryColor: '#a855f7',
            BackgroundColor: '#faf5ff',
            TextColor: '#581c87',
            PrimaryButtonGradientStart: '#8b5cf6',
            PrimaryButtonGradientEnd: '#7c3aed',
            SecondaryButtonGradientStart: '#a855f7',
            SecondaryButtonGradientEnd: '#9333ea',
            OutlineButtonBorderColor: '#8b5cf6',
            OutlineButtonTextColor: '#8b5cf6',
            FontFamily: "'Montserrat', sans-serif",
            BorderRadius: '4px',
            BoxShadow: '0 2px 4px rgba(0,0,0,0.1)'
        }
    };

    const selected = presets[preset];
    Object.keys(selected).forEach(key => {
        const element = document.getElementById(key);
        if (element) {
            element.value = selected[key];
            if (element.type === 'color') {
                element.nextElementSibling.value = selected[key];
            }
        }
    });

    document.getElementById('PrimaryColor').dispatchEvent(new Event('input'));
}

function applyToPreview() {
    // Apply current theme settings to the preview page
    const currentSettings = {
        PrimaryColor: document.getElementById('PrimaryColor').value,
        SecondaryColor: document.getElementById('SecondaryColor').value,
        BackgroundColor: document.getElementById('BackgroundColor').value,
        TextColor: document.getElementById('TextColor').value,
        PrimaryButtonGradientStart: document.getElementById('PrimaryButtonGradientStart').value,
        PrimaryButtonGradientEnd: document.getElementById('PrimaryButtonGradientEnd').value,
        SecondaryButtonGradientStart: document.getElementById('SecondaryButtonGradientStart').value,
        SecondaryButtonGradientEnd: document.getElementById('SecondaryButtonGradientEnd').value,
        OutlineButtonBorderColor: document.getElementById('OutlineButtonBorderColor').value,
        OutlineButtonTextColor: document.getElementById('OutlineButtonTextColor').value,
        FontFamily: document.getElementById('FontFamily').value,
        FontSize: document.getElementById('FontSize').value,
        LineHeight: document.getElementById('LineHeight').value,
        LetterSpacing: document.getElementById('LetterSpacing').value,
        BorderRadius: document.getElementById('BorderRadius').value,
        BoxShadow: document.getElementById('BoxShadow').value,
        TransitionDuration: document.getElementById('TransitionDuration').value,
        TransitionTimingFunction: document.getElementById('TransitionTimingFunction').value
    };

    // Store in localStorage for preview page
    localStorage.setItem('themeSettings', JSON.stringify(currentSettings));
    
    // Open preview in new tab
    window.open('@Url.Action("PreviewMainPage", "Admin")', '_blank');
}
</script> 