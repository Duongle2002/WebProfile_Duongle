// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyWebProfile.Models;

#nullable disable

namespace MyWebProfile.Migrations
{
    [DbContext(typeof(MyWebProfileContext))]
    [Migration("20250731145116_AddButtonGradientColors")]
    partial class AddButtonGradientColors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyWebProfile.Models.ContentSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ContentSettings");
                });

            modelBuilder.Entity("MyWebProfile.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("MyWebProfile.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeployUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("GitHubUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LiveDemoUrl")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MyWebProfile.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Proficiency")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MyWebProfile.Models.ThemeSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BorderColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BorderRadius")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BorderStyle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BorderWidth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BoxShadow")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonOutlineColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonOutlineHoverColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonOutlineHoverTextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonOutlineTextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonPrimaryColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonPrimaryHoverColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonPrimaryTextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonSecondaryColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonSecondaryHoverColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ButtonSecondaryTextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CardPadding")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContainerMaxWidth")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomCSS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("EnableHoverEffects")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EnableScrollAnimations")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<string>("GradientDirection")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradientEndColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradientMiddleColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradientPosition")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradientStartColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GradientType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HeadingFontFamily")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HeadingFontWeight")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LetterSpacing")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LineHeight")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OutlineButtonBorderColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("OutlineButtonTextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryButtonGradientEnd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryButtonGradientStart")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrimaryColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryButtonGradientEnd")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryButtonGradientStart")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondaryColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SectionPadding")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SpacingUnit")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransitionDelay")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransitionDuration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TransitionTimingFunction")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("UseGradientBackground")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("ThemeSettings");
                });

            modelBuilder.Entity("MyWebProfile.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
